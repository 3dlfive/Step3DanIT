"use strict";

/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */

/******/
(function () {
  // webpackBootstrap

  /******/
  "use strict";
  /******/

  var __webpack_modules__ = {
    /***/
    "./src/js/app.js":
    /*!***********************!*\
      !*** ./src/js/app.js ***!
      \***********************/

    /***/
    function srcJsAppJs(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {
      eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_request_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/request.js */ \"./src/js/modules/request.js\");\n/* harmony import */ var _modules_modal_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/modal.js */ \"./src/js/modules/modal.js\");\n/* harmony import */ var _modules_board_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/board.js */ \"./src/js/modules/board.js\");\n/* harmony import */ var _modules_obj_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/obj.js */ \"./src/js/modules/obj.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nconst API = 'https://ajax.test-danit.com/api/v2/cards';\r\nlet visitsCollection = [];\r\n\r\n\r\nlet entryModal;\r\nlet keyToken;\r\nlet newVisitModal;\r\n\r\n\r\nwindow.addEventListener(\"load\", () => {\r\n  keyToken = localStorage.getItem('token');\r\n  if (keyToken) {\r\n    document.querySelector('#entry-btn').classList.add('hidden');\r\n    document.querySelector('#visit-btn').classList.remove('hidden');\r\n    document.querySelector('#logout-btn').classList.remove('hidden');\r\n\r\n    visitsCollection = JSON.parse(localStorage.getItem('allVisits'))\r\n    let board = new _modules_board_js__WEBPACK_IMPORTED_MODULE_2__.Board().init()\r\n    \r\n\r\n  }\r\n});\r\n\r\ndocument.addEventListener('click', async (e) => {\r\n  e.preventDefault();\r\n  if (e.target.id === 'entry-btn') {\r\n    entryModal = new _modules_modal_js__WEBPACK_IMPORTED_MODULE_1__.ModalLogin();\r\n    entryModal.render();\r\n  } else if (e.target.id === 'login-btn') {\r\n    e.preventDefault();\r\n    let login = document.querySelector('#inputEmail').value;\r\n    let password = document.querySelector('#inputPassword').value;\r\n    if (login.includes('@') && password) {\r\n      await (0,_modules_request_js__WEBPACK_IMPORTED_MODULE_0__.getToken)(API, login, password)\r\n        .then(token => {\r\n\r\n          if (token && typeof token !== 'object') {\r\n            localStorage.setItem('token', token)\r\n            keyToken = localStorage.getItem('token')\r\n            entryModal.close()\r\n          } else {\r\n            entryModal.invalid();\r\n          }\r\n        })\r\n        .catch(e => console.log(e.message))\r\n\r\n    } else {\r\n      entryModal.invalid();\r\n    }\r\n\r\n    if (keyToken) {\r\n      document.querySelector('#entry-btn').classList.add('hidden');\r\n      document.querySelector('#visit-btn').classList.remove('hidden');\r\n      document.querySelector('#logout-btn').classList.remove('hidden');\r\n      let board = new _modules_board_js__WEBPACK_IMPORTED_MODULE_2__.Board().init()\r\n      document.querySelector('#sorting-form').classList.remove('hidden');\r\n\r\n      await (0,_modules_request_js__WEBPACK_IMPORTED_MODULE_0__.getCards)(API, keyToken).then(cardsList => {\r\n          localStorage.setItem('allVisits', JSON.stringify(cardsList))\r\n          visitsCollection = JSON.parse(localStorage.getItem('allVisits'))\r\n      });\r\n    }\r\n\r\n  } else if (e.target.id === 'visit-btn') {\r\n    newVisitModal = new _modules_modal_js__WEBPACK_IMPORTED_MODULE_1__.ModalCreateVisit();\r\n    newVisitModal.render();\r\n  } else if (e.target.id === 'create-btn') {\r\n    e.preventDefault();\r\n    const forms = document.querySelector('#newVisitForm');\r\n    forms.classList.add('was-validated');\r\n    if(forms.checkValidity()) {\r\n\r\n        let form = new FormData(forms)\r\n        let visitData = (0,_modules_obj_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(form);\r\n        visitData.status = 'Open'\r\n        newVisitModal.close();\r\n\r\n        await (0,_modules_request_js__WEBPACK_IMPORTED_MODULE_0__.sendCard)(API, keyToken, visitData).then(card => {\r\n            visitsCollection.push(card);\r\n            localStorage['allVisits'] = JSON.stringify(visitsCollection);\r\n      });\r\n      let a = new _modules_board_js__WEBPACK_IMPORTED_MODULE_2__.Board().clearCards();\r\n    let b = new _modules_board_js__WEBPACK_IMPORTED_MODULE_2__.Board().getCards();\r\n  }\r\n\r\n\r\n  } else if (e.target.id === 'logout-btn') {\r\n    localStorage.clear();\r\n    location.reload()\r\n  } else if (e.target.id === 'showMore') {\r\n    e.target.closest('.visit-card').classList.toggle('card-border-radius')\r\n    e.target.closest('.visit-card').classList.toggle('card-z-index')\r\n  }\r\n})\r\n\n\n//# sourceURL=webpack://mygulp-2022/./src/js/app.js?");
      /***/
    },

    /***/
    "./src/js/modules/board.js":
    /*!*********************************!*\
      !*** ./src/js/modules/board.js ***!
      \*********************************/

    /***/
    function srcJsModulesBoardJs(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {
      eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Board\": () => (/* binding */ Board)\n/* harmony export */ });\n/* harmony import */ var _card_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./card.js */ \"./src/js/modules/card.js\");\n\r\n\r\n\r\n\r\nclass Board {\r\n  constructor() {\r\n    this.desk = null;\r\n    this.deskHeader = null;\r\n    this.deskSearchInput = null;\r\n    this.deskStatusFilter = null;\r\n    this.deskPriorityFilter = null;\r\n    this.cards = [];\r\n  }\r\n\r\n  init() {\r\n    this.createBord();\r\n    this.renderBoard();\r\n    this.search()\r\n    this.filter()\r\n  }\r\n\r\n  createBord() {\r\n    this.desk = document.createElement('div');\r\n    this.cardBlock = document.createElement('div');\r\n    this.desk.classList.add('desk')\r\n    this.cardBlock.classList.add('desk__card-block')\r\n    this.deskHeader = document.createElement('div');\r\n    this.deskHeader.classList.add('desk__desk-header');\r\n    this.deskSearchInput = document.createElement('input');\r\n    this.deskStatusFilter = document.createElement('select')\r\n    this.deskPriorityFilter = document.createElement('select')\r\n    this.deskSearchInput.setAttribute('placeholder', 'Search...')\r\n  }\r\n\r\n  renderBoard() {\r\n    const statuses = ['Все', 'Open', 'Close']\r\n    const priorities = ['Все', 'low', 'middle', 'high']\r\n    const prioritiesOption = document.createElement('option');\r\n    statuses.forEach(elem => {\r\n      const statusesOption = document.createElement('option');\r\n      statusesOption.innerText = elem;\r\n      this.deskStatusFilter.append(statusesOption)\r\n    })\r\n    priorities.forEach(elem => {\r\n      const prioritiesOption = document.createElement('option');\r\n      prioritiesOption.innerText = elem;\r\n      this.deskPriorityFilter.append(prioritiesOption)\r\n    })\r\n    document.querySelector('.container').after(this.desk)\r\n    this.deskHeader.append(this.deskSearchInput, this.deskPriorityFilter, this.deskStatusFilter)\r\n    this.desk.append(this.deskHeader, this.cardBlock)\r\n    this.getCards()\r\n  }\r\n\r\n  getCards() {\r\n  \r\n\r\n    fetch('https://ajax.test-danit.com/api/v2/cards', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.status >= 200 && res.status < 300) {\r\n          return res;\r\n        } else {\r\n          let error = new Error(res.statusText);\r\n          error.response = res;\r\n          throw error\r\n        }\r\n      })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n\r\n        if (data.length < 1) {\r\n          let noCardsText = document.createElement('span')\r\n          noCardsText.classList.add('desk__blank-text')\r\n          noCardsText.innerText = 'Визиты не добавлены'\r\n          this.deskHeader.after(noCardsText)\r\n        } else {\r\n          this.cards.length = 0;\r\n          data.forEach(visit => {\r\n            this.cards.push(visit)\r\n          })\r\n          this.cards.forEach(e => new _card_js__WEBPACK_IMPORTED_MODULE_0__.Card(e).render())\r\n        }\r\n      })\r\n  }\r\n\r\n\r\n  search() {\r\n    this.deskSearchInput.onkeydown = function(event) {\r\n      if (event.key == 'Enter') {\r\n        this.blur();\r\n      }\r\n    };\r\n    this.deskSearchInput.addEventListener('blur', () => {\r\n      this.clearCards()\r\n\r\n\r\n      let searchCards = this.cards.filter(item => item.doctor.toLowerCase().includes(this.deskSearchInput.value.toLowerCase()) || item.description.toLowerCase().includes(this.deskSearchInput.value.toLowerCase()))\r\n      if (searchCards.length < 1) {\r\n        if (!document.querySelector('.desk__blank-text')) {\r\n          let noCardsText = document.createElement('span')\r\n          noCardsText.classList.add('desk__blank-text')\r\n          noCardsText.innerText = 'Нет совпадения'\r\n          this.deskHeader.after(noCardsText)\r\n        }\r\n      } else {\r\n        searchCards.forEach(e => new _card_js__WEBPACK_IMPORTED_MODULE_0__.Card(e).render())\r\n        document.querySelector('.desk__blank-text').remove()\r\n      }\r\n    })\r\n  }\r\n\r\n  clearCards() {\r\n    document.querySelectorAll('.desk__card').forEach(e => e.remove())\r\n  }\r\n  filter() {\r\n    this.deskStatusFilter.onchange = () => {\r\n      this.clearCards()\r\n      console.log(this.cards);\r\n      let filterCards = this.cards.filter(item => item.status.toLowerCase() === this.deskStatusFilter.value.toLowerCase());\r\n      if (filterCards.length < 1) {\r\n        if (!document.querySelector('.desk__blank-text')) {\r\n          let noCardsText = document.createElement('span')\r\n          noCardsText.classList.add('desk__blank-text')\r\n          noCardsText.innerText = 'Ничего не найдено'\r\n          this.deskHeader.after(noCardsText)\r\n        }\r\n      } else {\r\n        filterCards.forEach(e => new _card_js__WEBPACK_IMPORTED_MODULE_0__.Card(e).render())\r\n        document.querySelector('.desk__blank-text').remove()\r\n      }\r\n      if (this.deskStatusFilter.value === 'Все') {\r\n        this.getCards()\r\n        document.querySelector('.desk__blank-text').remove()\r\n      }\r\n    }\r\n    this.deskPriorityFilter.onchange = () => {\r\n      this.clearCards()\r\n      let priorCards = this.cards.filter(item => item.urgency.toLowerCase() === this.deskPriorityFilter.value.toLowerCase());\r\n      if (priorCards.length < 1) {\r\n        if (!document.querySelector('.desk__blank-text')) {\r\n          let noCardsText = document.createElement('span')\r\n          noCardsText.classList.add('desk__blank-text')\r\n          noCardsText.innerText = 'Ничего не найдено'\r\n          this.deskHeader.after(noCardsText)\r\n        }\r\n      } else {\r\n        priorCards.forEach(e => new _card_js__WEBPACK_IMPORTED_MODULE_0__.Card(e).render())\r\n\r\n        document.querySelector('.desk__blank-text').remove()\r\n      }\r\n      if (this.deskPriorityFilter.value === 'Все') {\r\n        this.getCards()\r\n        document.querySelector('.desk__blank-text').remove()\r\n      }\r\n    }\r\n  }\r\n\r\n  \r\n}\r\n\n\n//# sourceURL=webpack://mygulp-2022/./src/js/modules/board.js?");
      /***/
    },

    /***/
    "./src/js/modules/card.js":
    /*!********************************!*\
      !*** ./src/js/modules/card.js ***!
      \********************************/

    /***/
    function srcJsModulesCardJs(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {
      eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Card\": () => (/* binding */ Card)\n/* harmony export */ });\n/* harmony import */ var _modal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modal.js */ \"./src/js/modules/modal.js\");\n\r\n\r\n\r\n\r\nclass Card {\r\n  constructor(visit,title) {\r\n    this.btnDelete = document.createElement('button');\r\n    this.btnEdit = document.createElement('button');\r\n    this.btnMore = document.createElement('button');\r\n    this.cardBody = document.createElement('div')\r\n    this.visit = visit;\r\n    this.id = visit.id\r\n    this.cardsInfo = [];\r\n  }\r\n\r\n  render() {\r\n\r\n    this.cardBody.classList.add('desk__card')\r\n    this.btnEdit.innerText = 'Изменить'\r\n    this.btnMore.innerText = 'Детально'\r\n    this.btnDelete.innerText = 'x'\r\n    this.btnEdit.classList.add('btn', 'btn-card', 'btn-edit')\r\n    this.btnMore.classList.add('btn', 'btn-card')\r\n    this.btnDelete.classList.add('btn', 'btn-card', 'btn-delete')\r\n    const title = document.createElement('h4')\r\n    const description = document.createElement('span')\r\n    const fullName = document.createElement('span')\r\n    const urgency = document.createElement('span')\r\n    const visitReason = document.createElement('span')\r\n    const status = document.createElement('span')\r\n    status.innerText = `Статус: ${this.visit.status}`\r\n    title.innerText = this.visit.doctor\r\n    description.innerText = `Краткое описание: ${this.visit.description}`\r\n    fullName.innerText = `Полное имя: ${this.visit.fullName}`\r\n    urgency.innerText = `Срочность: ${this.visit.urgency}`\r\n    visitReason.innerText = `Причина последнего визита: ${this.visit.purpose}`\r\n    this.cardsInfo.push(title, description, fullName, urgency, visitReason, status, this.btnMore, this.btnEdit, this.btnDelete);\r\n    this.cardBody.append(...this.cardsInfo)\r\n    document.querySelector('.desk__card-block').append(this.cardBody)\r\n    this.btnDelete.addEventListener('click', this.deleteCard.bind(this))\r\n    this.btnMore.addEventListener('click', () => {\r\n      if (!document.querySelector('.doctorblock')) {\r\n        this.showMore()\r\n        this.btnMore.innerText = 'Скрыть'\r\n      } else {\r\n        this.btnMore.innerText = 'Детально'\r\n        document.querySelector('.doctorblock').remove()\r\n      }\r\n\r\n    })\r\n    this.btnEdit.addEventListener('click', () => {\r\n      this.editCard()\r\n    })\r\n\r\n\r\n  }\r\n\r\n  showMore() {\r\n    const doctorBlock = document.createElement('div')\r\n    doctorBlock.classList.add('doctorblock')\r\n    this.cardBody.append(doctorBlock)\r\n    if (this.visit.doctor === 'Therapist') {\r\n      const age = document.createElement('span');\r\n      age.innerText = `Возраст: ${this.visit.age} лет`\r\n      doctorBlock.append(age);\r\n\r\n    }\r\n    if (this.visit.doctor === 'Dentist') {\r\n      const date = document.createElement('span');\r\n      date.innerText = `Дата последнего визита: ${this.visit.dateOfLastVisit}`\r\n      doctorBlock.append(date);\r\n\r\n    }\r\n    if (this.visit.doctor === 'Cardiologist') {\r\n      const age = document.createElement('span');\r\n      const blood = document.createElement('span');\r\n      const bodyIndex = document.createElement('span');\r\n      const diseases = document.createElement('span');\r\n      age.innerText = `Возраст: ${this.visit.age} лет`\r\n      blood.innerText = ` Давление: ${this.visit.systolicPressure} / ${this.visit.diastolicPressure} `\r\n      bodyIndex.innerText = `Индекс тела: ${this.visit.bmi}`\r\n      diseases.innerText = `Болезни ВСД: ${this.visit.cardiovascularDiseases}`\r\n      doctorBlock.append(age, blood, bodyIndex, diseases);\r\n\r\n    }\r\n  }\r\n\r\n  deleteCard() {\r\n    fetch(`https://ajax.test-danit.com/api/v2/cards/${this.id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.status >= 200 && res.status < 300) {\r\n          return res;\r\n        } else {\r\n          let error = new Error(res.statusText);\r\n          error.response = res;\r\n          throw error\r\n        }\r\n      })\r\n      .then(res => {\r\n\r\n        if (res.status === 200) {\r\n          this.cardBody.remove()\r\n          this.btnDelete.removeEventListener('click', this.deleteCard)\r\n        }\r\n      })\r\n  }\r\n\r\n  editCard() {\r\n\r\n    let newForm = new _modal_js__WEBPACK_IMPORTED_MODULE_0__.Modal().renederEdit(this.visit);\r\n    \r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://mygulp-2022/./src/js/modules/card.js?");
      /***/
    },

    /***/
    "./src/js/modules/modal.js":
    /*!*********************************!*\
      !*** ./src/js/modules/modal.js ***!
      \*********************************/

    /***/
    function srcJsModulesModalJs(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {
      eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Modal\": () => (/* binding */ Modal),\n/* harmony export */   \"ModalCreateVisit\": () => (/* binding */ ModalCreateVisit),\n/* harmony export */   \"ModalLogin\": () => (/* binding */ ModalLogin)\n/* harmony export */ });\n/* harmony import */ var _card_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./card.js */ \"./src/js/modules/card.js\");\n/* harmony import */ var _board_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./board.js */ \"./src/js/modules/board.js\");\n\r\n\r\n\r\nclass Modal {\r\n  constructor(title, body) {\r\n    this.title = title;\r\n    this.body = body;\r\n    this.container;\r\n  }\r\n\r\n  render() {\r\n    document.body.insertAdjacentHTML('beforeend', `\r\n        <div class=\"modal\" tabindex=\"-1\" id=\"myModal\">\r\n            <div class=\"modal-dialog\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                        <h5 class=\"modal-title\">${this.title}</h5>\r\n                        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                    </div>\r\n                    <p class=\"invalid-message text-center text-danger mt-2 mb-0\"></p>\r\n                    <div class=\"modal-body\">\r\n                        ${this.body}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        `);\r\n    this.modal = new bootstrap.Modal('#myModal', {\r\n      keyboard: false\r\n    });\r\n    this.modal.show();\r\n    this.modal._element.addEventListener('hidden.bs.modal', event => event.target.remove());\r\n\r\n  }\r\n\r\n  close() {\r\n    this.modal.hide();\r\n  }\r\n\r\n  invalid() {\r\n    document.querySelector('.invalid-message').innerHTML = 'Недійсний логін або пароль!';\r\n  }\r\n  renederEdit(visit) {\r\n\r\n    this.render();\r\n    document.querySelector(\".modal-body\").innerText = `Внесіть зміни ${visit.doctor}`;\r\n    document.querySelector(\".modal-title\").innerText = `Карточка паціента ${visit.fullName}`;\r\n\r\n    const status = document.createElement('select')\r\n    const statuses = ['Open', 'Close']\r\n    const age = document.createElement('input');\r\n\r\n    const topPresure = document.createElement('input');\r\n    const lowPresure = document.createElement('input');\r\n\r\n\r\n    const diseases = document.createElement('input');\r\n    const bodyIndex = document.createElement('input');\r\n\r\n    const date = document.createElement('input');\r\n    statuses.forEach(e => {\r\n      const option = document.createElement('option')\r\n      option.setAttribute('required', true)\r\n      option.innerText = e\r\n      status.append(option)\r\n    })\r\n    const visitReason = document.createElement('input');\r\n    const visitDescription = document.createElement('textarea');\r\n    const visitFullName = document.createElement('input')\r\n    const visitTitle = document.createElement('input')\r\n    const urgentItems = ['low', 'middle', 'high']\r\n    const urgentList = document.createElement('select')\r\n    urgentList.classList.add('modal-area__urgentlist')\r\n    urgentItems.forEach(element => {\r\n      const option = document.createElement('option')\r\n      option.setAttribute('required', true)\r\n      option.innerText = element\r\n      urgentList.append(option)\r\n    })\r\n\r\n    visitReason.value = visit.purpose\r\n    visitDescription.value = visit.description\r\n    visitFullName.value = visit.fullName\r\n    visitTitle.value = visit.doctor\r\n\r\n    const visitFields = document.createElement('div')\r\n    visitFields.classList.add('modal-area__visit-fields');\r\n    if (visit.doctor === 'Therapist') {\r\n      age.classList.add('modal-area__modalEdit-input')\r\n      age.value = visit.age\r\n      visitFields.append(age)\r\n    }\r\n    if (visit.doctor === 'Dentist') {\r\n      date.classList.add('modal-area__modalEdit-input')\r\n      date.setAttribute('onfocus', `this.type='date'`)\r\n      date.value = visit.dateOfLastVisit\r\n      visitFields.append(date)\r\n    }\r\n    if (visit.doctor === 'Cardiologist') {\r\n      age.classList.add('modal-area__modalEdit-input')\r\n      topPresure.classList.add('modal-area__modalEdit-input')\r\n      lowPresure.classList.add('modal-area__modalEdit-input')\r\n      bodyIndex.classList.add('modal-area__modalEdit-input')\r\n      diseases.classList.add('modal-area__modalEdit-input')\r\n      age.value = visit.age\r\n      topPresure.value = visit.systolicPressure\r\n      lowPresure.value = visit.diastolicPressure\r\n      bodyIndex.value = visit.bmi\r\n      diseases.value = visit.cardiovascularDiseases\r\n      visitFields.append(age, lowPresure,topPresure, bodyIndex, diseases)\r\n    }\r\n    const jktym = [visitReason, visitTitle, visitDescription, visitFullName, urgentList, status]\r\n    jktym.forEach(e => e.classList.add('modal-area__modalEdit-input'))\r\n\r\n    visitFields.append(...jktym)\r\n    const saveEdit = document.createElement('button')\r\n    saveEdit.classList.add('modal-area__editvisitbtn')\r\n    saveEdit.innerText = 'Сохранить'\r\n    this.container = document.querySelector(\".modal-body\");\r\n\r\n    this.container.append(visitFields, saveEdit)\r\n    saveEdit.addEventListener('click', () => {\r\n      const bodyCardio = {\r\n        title: visitTitle.value,\r\n        description: visitDescription.value,\r\n        doctor: visit.doctor,\r\n        age: age.value,\r\n        systolicPressure: topPresure.value,\r\n        diastolicPressure: lowPresure.value,\r\n        bmi: bodyIndex.value,\r\n        cardiovascularDiseases: diseases.value,\r\n        urgency: urgentList.value,\r\n        fullName: visitFullName.value,\r\n        purpose: visitReason.value,\r\n        status: status.value\r\n      }\r\n      const bodyDantist = {\r\n        title: visitTitle.value,\r\n        description: visitDescription.value,\r\n        doctor: visit.doctor,\r\n        dateOfLastVisit: date.value,\r\n        urgency: urgentList.value,\r\n        fullName: visitFullName.value,\r\n        purpose: visitReason.value,\r\n        status: status.value\r\n      }\r\n\r\n      const bodyTherapist = {\r\n        title: visitTitle.value,\r\n        description: visitDescription.value,\r\n        doctor: visit.doctor,\r\n        age: age.value,\r\n        urgency: urgentList.value,\r\n        fullName: visitFullName.value,\r\n        purpose: visitReason.value,\r\n        status: status.value\r\n\r\n      }\r\n      if (visit.doctor === 'Cardiologist') {\r\n        fetch(`https://ajax.test-danit.com/api/v2/cards/${visit.id}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(bodyCardio),\r\n            headers: {\r\n              'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n          })\r\n          .then((res) => {\r\n            if (res.status >= 200 && res.status < 300) {\r\n              return res;\r\n            } else {\r\n              let error = new Error(res.statusText);\r\n              error.response = res;\r\n              throw error\r\n            }\r\n          })\r\n          .then(res => res.json())\r\n          .then(data => {\r\n            if (data.status === 'Error') {\r\n              alert(data.message)\r\n            } else {\r\n              let a = new _board_js__WEBPACK_IMPORTED_MODULE_1__.Board().clearCards();\r\n              let b = new _board_js__WEBPACK_IMPORTED_MODULE_1__.Board().getCards();\r\n              document.querySelector('.btn-close').click()\r\n            }\r\n          })\r\n\r\n      }\r\n      if (visit.doctor === 'Dentist') {\r\n\r\n        fetch(`https://ajax.test-danit.com/api/v2/cards/${visit.id}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(bodyDantist),\r\n            headers: {\r\n              'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n          })\r\n          .then((res) => {\r\n            if (res.status >= 200 && res.status < 300) {\r\n              return res;\r\n            } else {\r\n              let error = new Error(res.statusText);\r\n              error.response = res;\r\n              throw error\r\n            }\r\n          })\r\n          .then(res => res.json())\r\n          .then(data => {\r\n            if (data.status === 'Error') {\r\n              alert(data.message)\r\n            } else {\r\n              let a = new _board_js__WEBPACK_IMPORTED_MODULE_1__.Board().clearCards();\r\n              let b = new _board_js__WEBPACK_IMPORTED_MODULE_1__.Board().getCards();\r\n              document.querySelector('.btn-close').click()\r\n            }\r\n          })\r\n      }\r\n      if (visit.doctor === 'Therapist') {\r\n\r\n        fetch(`https://ajax.test-danit.com/api/v2/cards/${visit.id}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(bodyTherapist),\r\n            headers: {\r\n              'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n          })\r\n          .then((res) => {\r\n            if (res.status >= 200 && res.status < 300) {\r\n              return res;\r\n            } else {\r\n              let error = new Error(res.statusText);\r\n              error.response = res;\r\n              throw error\r\n            }\r\n          })\r\n          .then(res => res.json())\r\n          .then(data => {\r\n            if (data.status === 'Error') {\r\n              alert(data.message)\r\n            } else {\r\n\r\n              let a = new _board_js__WEBPACK_IMPORTED_MODULE_1__.Board().clearCards();\r\n              let b = new _board_js__WEBPACK_IMPORTED_MODULE_1__.Board().getCards();\r\n              document.querySelector('.btn-close').click()\r\n\r\n            }\r\n          })\r\n\r\n      }\r\n\r\n\r\n    })\r\n\r\n  }\r\n}\r\n\r\nclass ModalLogin extends Modal {\r\n  constructor(email = '', password = '', title = 'Введіть логін і пароль') {\r\n    super(title)\r\n    this.email = email;\r\n    this.password = password;\r\n    this.body = `\r\n        <form id=\"login-form\">\r\n            <div class=\"mb-3 form-floating\">\r\n                <input type=\"email\" class=\"form-control\" id=\"inputEmail\" aria-describedby=\"emailHelp\" placeholder=\"name@example.com\" required value=\"${this.email}\">\r\n                <label for=\"inputEmail\" class=\"form-label\">Ваш мейл</label>\r\n            </div>\r\n            <div class=\"mb-3 form-floating\">\r\n                <input type=\"password\" class=\"form-control\" id=\"inputPassword\" value=\"${this.password}\" placeholder=\"password\" required autocomplete=\"on\">\r\n                <label for=\"inputPassword\" class=\"form-label\">Ваш пароль</label>\r\n            </div>\r\n            <div class=\"mb-3 d-flex justify-content-end\">\r\n                <button type=\"submit\" id=\"login-btn\" class=\"btn btn__login ms-3\">Вхід</button>\r\n            </div>\r\n        </form>\r\n        `\r\n  }\r\n}\r\n\r\n\r\nclass ModalCreateVisit extends Modal {\r\n  constructor (title = 'Створити візит') {\r\n      super(title);\r\n      this.body = `\r\n      <form id=\"newVisitForm\" class=\"g-3 needs-validation\" novalidate>\r\n          <div class=\"mb-2 col-12\">\r\n              <select id=\"selectDoctor\" class=\"form-select\" aria-label=\"Status\" name=\"doctor\">\r\n                  <option selected disabled>Виберіть лікаря</option>\r\n                  <option value=\"Cardiologist\">Кардіолог</option>\r\n                  <option value=\"Dentist\">Стоматолог</option>\r\n                  <option value=\"Therapist\">Терапевт</option>\r\n              </select>\r\n          </div>\r\n          <div class=\"row hidden\" id=\"forAllDoctors\">\r\n              <div class=\"col-md-6 col-sm-12\">\r\n                  <div class=\"mb-2 form-floating\">\r\n                      <input type=\"text\" class=\"form-control\" id=\"visitsPurpose\" name=\"purpose\" placeholder=\"Мета візиту\" required>\r\n                      <label for=\"visitsPurpose\" class=\"form-label\">Мета візиту</label>\r\n                      <div class=\"invalid-feedback\">\r\n                          Не може бути порожнім!\r\n                      </div>\r\n                  </div>\r\n                  <div class=\"mb-2 \">\r\n                      <select id=\"select-urgency\" class=\"form-select\" required aria-label=\"Urgency\" name=\"urgency\">\r\n                          <option value=\"\" selected disabled>Терміновість</option>\r\n                          <option value=\"high\">Високий</option>\r\n                          <option value=\"middle\">Середній</option>\r\n                          <option value=\"low\">Низький</option>\r\n                      </select>\r\n                      <div class=\"invalid-feedback\">Виберіть один варіант</div>\r\n                  </div>\r\n              </div>\r\n              <div class=\"col-md-6 col-sm-12\">\r\n                  <div class=\"mb-2 form-floating\">\r\n                      <textarea class=\"form-control\" id=\"shortDescription\" required name=\"description\" placeholder=\"Короткий опис візиту\" style=\"height: 104px\"></textarea>\r\n                      <label for=\"shortDescription\" class=\"form-label\">Короткий опис візиту</label>\r\n                      <div class=\"invalid-feedback\">\r\n                          Не може бути порожнім!\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              <div class=\"col-md-12\">\r\n                  <div class=\"mb-2 form-floating\">\r\n                      <input type=\"text\" class=\"form-control\" id=\"userName\" name=\"fullName\" placeholder=\"Ім'я та прізвище\" required>\r\n                      <label for=\"userName\" class=\"form-label\">Ім'я та прізвище</label>\r\n                      <div class=\"invalid-feedback\">\r\n                          Будь-ласка, введіть своє ім'я!\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n          <div class=\"row\" id=\"additional\"></div>\r\n\r\n          <div class=\"mb-3 d-flex justify-content-end\">\r\n              <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Скасувати</button>\r\n              <button type=\"submit\" id=\"create-btn\" class=\"btn__create ms-3 hidden\">Створити візит</button>\r\n          </div>\r\n      </form>\r\n      `\r\n  }\r\n\r\n  render () {\r\n      super.render();\r\n\r\n      const form = document.querySelector('#newVisitForm');\r\n      const allDoctorsBlock = form.querySelector('#forAllDoctors');\r\n      const additionalBlock = form.querySelector('#additional');\r\n\r\n      const saveBtn = form.querySelector('#create-btn');\r\n      form.addEventListener('change', (e) => {\r\n        e.preventDefault()\r\n          if(e.target === form.querySelector('#selectDoctor')) {\r\n              if(e.target.value === 'Cardiologist') {\r\n                  allDoctorsBlock.classList.remove('hidden');\r\n                  saveBtn.classList.remove('hidden');\r\n\r\n                  additionalBlock.innerHTML = `\r\n                      <div class=\"col-md-6 col-sm-12\">\r\n                          <div class=\"mb-2 form-floating\">\r\n                              <input type=\"number\" required class=\"form-control\" name=\"age\" id=\"age\" placeholder=\"Вік\" min=\"1\" max=\"110\">\r\n                              <label for=\"age\" class=\"form-label\">Вік</label>\r\n                              <div class=\"invalid-feedback\">\r\n                                   Введіть свій вік!\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n                      <div class=\"col-md-6 col-sm-12\">\r\n                          <div class=\"mb-2 form-floating\">\r\n                              <input type=\"number\" required class=\"form-control\" name=\"bmi\" id=\"bmi\" placeholder=\"Індекс маси тіла\" min=\"1\" max=\"150\">\r\n                              <label for=\"bmi\" class=\"form-label\">Індекс маси тіла</label>\r\n                              <div class=\"invalid-feedback\">\r\n                                  Введіть число!\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n                      <div class=\"col-12\">\r\n                          <div class=\"input-group mb-2\">\r\n                              <span class=\"input-group-text\">Нормальний тиск</span>\r\n                              <input type=\"number\" required id=\"Systolic\" placeholder=\"Систолічний\" name=\"systolicPressure\" class=\"form-control\" min=\"70\" max=\"170\">\r\n                              <input type=\"number\" required id=\"Diastolic\" placeholder=\"Діастолічний\" name=\"diastolicPressure\" class=\"form-control\" min=\"50\" max=\"110\">\r\n                          </div>\r\n                      </div>\r\n                      <div class=\"col-12\">\r\n                          <div class=\"mb-2 form-floating\">\r\n                              <input type=\"text\" required class=\"form-control\" name=\"cardiovascularDiseases\" id=\"diseases\" placeholder=\"Cardiovascular diseases\">\r\n                              <label for=\"diseases\" class=\"form-label\">Серцево-судинні захворювання</label>\r\n                              <div class=\"invalid-feedback\">\r\n                                  Не може бути порожнім!\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n                  `\r\n              } else if(e.target.value === 'Dentist') {\r\n                  allDoctorsBlock.classList.remove('hidden');\r\n                  saveBtn.classList.remove('hidden');\r\n\r\n                  additionalBlock.innerHTML = `\r\n                      <div class=\"col-12\">\r\n                          <div class=\"mb-2 form-floating\">\r\n                              <input type=\"date\" required class=\"form-control\" name=\"dateOfLastVisit\" id=\"date\" placeholder=\"Дата останнього відвідування\">\r\n                              <label for=\"date\" class=\"form-label\">Дата останнього відвідування</label>\r\n                              <div class=\"invalid-feedback\">\r\n                                  Виберіть дату!\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n                  `\r\n              } else if(e.target.value === 'Therapist') {\r\n                  allDoctorsBlock.classList.remove('hidden');\r\n                  saveBtn.classList.remove('hidden');\r\n\r\n                  additionalBlock.innerHTML = `\r\n                  <div class=\"col-12\">\r\n                      <div class=\"mb-2 form-floating\">\r\n                          <input type=\"number\" required class=\"form-control\" name=\"age\" id=\"age\" placeholder=\"Вік\" min=\"1\" max=\"110\">\r\n                          <label for=\"age\" class=\"form-label\">Вік</label>\r\n                          <div class=\"invalid-feedback\">\r\n                              Введіть свій вік\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n                  `\r\n\r\n              }\r\n          }\r\n\r\n      })\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://mygulp-2022/./src/js/modules/modal.js?");
      /***/
    },

    /***/
    "./src/js/modules/obj.js":
    /*!*******************************!*\
      !*** ./src/js/modules/obj.js ***!
      \*******************************/

    /***/
    function srcJsModulesObjJs(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {
      eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ objForm)\n/* harmony export */ });\nfunction objForm(form) {\r\n    let obj = {};\r\n    for(let [name, value] of form) {\r\n        if(value) {\r\n            obj[name] = value;\r\n        }\r\n    }\r\n    return obj\r\n}\r\n\n\n//# sourceURL=webpack://mygulp-2022/./src/js/modules/obj.js?");
      /***/
    },

    /***/
    "./src/js/modules/request.js":
    /*!***********************************!*\
      !*** ./src/js/modules/request.js ***!
      \***********************************/

    /***/
    function srcJsModulesRequestJs(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {
      eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getCard\": () => (/* binding */ getCard),\n/* harmony export */   \"getCards\": () => (/* binding */ getCards),\n/* harmony export */   \"getToken\": () => (/* binding */ getToken),\n/* harmony export */   \"sendCard\": () => (/* binding */ sendCard)\n/* harmony export */ });\nconst sendRequest = async (API, point = '', method = 'GET', config) => {\r\n    return await fetch(`${API}${point}`, {\r\n        method,\r\n        ...config\r\n    }).then(response => {\r\n        if(response.ok) {\r\n            if (point === '/login') {\r\n                return response.text();\r\n            } else {\r\n                return method === 'DELETE' ? response : response.json();\r\n            }\r\n        } else {\r\n            return new Error('Something goes wrong');\r\n        }\r\n    })\r\n}\r\n\r\n\r\nconst getToken = (API, email, password) => sendRequest(API, '/login', 'POST',    {\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n    body: JSON.stringify({ email: `${email}`, password: `${password}`})\r\n});\r\n\r\n\r\nconst sendCard = (API, token, cardData) => sendRequest(API, '', 'POST', {\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n        },\r\n    body: JSON.stringify(cardData)\r\n});\r\n\r\n\r\nconst getCards = (API, token) => sendRequest(API, ...[,,], {\r\n    headers: {\r\n        'Authorization': `Bearer ${token}`\r\n      }\r\n    });\r\n\r\nconst getCard = (API, token, cardId) => sendRequest(API, `/${cardId}`, ...[,], {\r\n    headers: {\r\n        'Authorization': `Bearer ${token}`\r\n      }\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://mygulp-2022/./src/js/modules/request.js?");
      /***/
    }
    /******/

  };
  /************************************************************************/

  /******/
  // The module cache

  /******/

  var __webpack_module_cache__ = {};
  /******/

  /******/
  // The require function

  /******/

  function __webpack_require__(moduleId) {
    /******/
    // Check if module is in cache

    /******/
    var cachedModule = __webpack_module_cache__[moduleId];
    /******/

    if (cachedModule !== undefined) {
      /******/
      return cachedModule.exports;
      /******/
    }
    /******/
    // Create a new module (and put it into the cache)

    /******/


    var module = __webpack_module_cache__[moduleId] = {
      /******/
      // no module.id needed

      /******/
      // no module.loaded needed

      /******/
      exports: {}
      /******/

    };
    /******/

    /******/
    // Execute the module function

    /******/

    __webpack_modules__[moduleId](module, module.exports, __webpack_require__);
    /******/

    /******/
    // Return the exports of the module

    /******/


    return module.exports;
    /******/
  }
  /******/

  /************************************************************************/

  /******/

  /* webpack/runtime/define property getters */

  /******/


  (function () {
    /******/
    // define getter functions for harmony exports

    /******/
    __webpack_require__.d = function (exports, definition) {
      /******/
      for (var key in definition) {
        /******/
        if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
          /******/
          Object.defineProperty(exports, key, {
            enumerable: true,
            get: definition[key]
          });
          /******/
        }
        /******/

      }
      /******/

    };
    /******/

  })();
  /******/

  /******/

  /* webpack/runtime/hasOwnProperty shorthand */

  /******/


  (function () {
    /******/
    __webpack_require__.o = function (obj, prop) {
      return Object.prototype.hasOwnProperty.call(obj, prop);
    };
    /******/

  })();
  /******/

  /******/

  /* webpack/runtime/make namespace object */

  /******/


  (function () {
    /******/
    // define __esModule on exports

    /******/
    __webpack_require__.r = function (exports) {
      /******/
      if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {
        /******/
        Object.defineProperty(exports, Symbol.toStringTag, {
          value: 'Module'
        });
        /******/
      }
      /******/


      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      /******/
    };
    /******/

  })();
  /******/

  /************************************************************************/

  /******/

  /******/
  // startup

  /******/
  // Load entry module and return exports

  /******/
  // This entry module can't be inlined because the eval devtool is used.

  /******/


  var __webpack_exports__ = __webpack_require__("./src/js/app.js");
  /******/

  /******/

})();